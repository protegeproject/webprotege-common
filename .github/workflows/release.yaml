name: Release

on:
  push:
    branches:
      - main
      - main-who

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'protegeproject-bot[bot]' }}
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PROTEGEPROJECT_BOT_APP_ID }}
          private-key: ${{ secrets.PROTEGEPROJECT_BOT_APP_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.head_ref }}
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-private-key: ${{secrets.GPG_PRIVATE_KEY}}
          gpg-passphrase: GPG_PASSPHRASE
      - name: Get current version
        id: get-version
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $current_version"
          echo "::set-output name=current_version::$current_version"
      - name: Bump version
        id: bump
        run: |
          current_version=${{ steps.get-version.outputs.current_version }}
          branch=${GITHUB_REF##*/}
          echo "Current branch: $branch"
          
          # Extract the base version without suffix
          base_version=$(echo $current_version | sed -E 's/(-.*)?$//')
          
          # Increment the base version (assuming semantic versioning)
          IFS='.' read -r -a version_parts <<< "$base_version"
          version_parts[2]=$((version_parts[2] + 1))
          new_base_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          
          if [[ "$branch" == "main-who" ]]; then
            new_version="${new_base_version}-WHO"
          else
            new_version="$new_base_version"
          fi
          
          echo "New version: $new_version"
          mvn versions:set -DnewVersion=$new_version -DgenerateBackupPoms=false
          echo "::set-output name=new_version::$new_version"
      - name: Commit new version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add pom.xml
          git commit -m "Bump version to ${{ steps.bump.outputs.new_version }}"
          git tag ${{ steps.bump.outputs.new_version }}
          git push origin HEAD:${GITHUB_REF##*/}
          git push origin ${{ steps.bump.outputs.new_version }}
      - name: Build with Maven
        run: mvn --batch-mode -Prelease deploy
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump.outputs.new_version }}
          generate_release_notes: true

env:
  GPG_PASSPHRASE: ${{secrets.GPG_PASSPHRASE}}
  OSSRH_USERNAME: ${{secrets.OSSRH_USERNAME}}
  OSSRH_TOKEN: ${{secrets.OSSRH_TOKEN}}